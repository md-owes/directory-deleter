<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>net7.0-maccatalyst</TargetFrameworks>
		<TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows'))">$(TargetFrameworks);net7.0-windows10.0.22621.0</TargetFrameworks>
		<!-- Uncomment to also build the tizen app. You will need to install tizen by following this: https://github.com/Samsung/Tizen.NET -->
		<!-- <TargetFrameworks>$(TargetFrameworks);net7.0-tizen</TargetFrameworks> -->
		<OutputType>Exe</OutputType>
		<RootNamespace>directory_deleter</RootNamespace>
		<UseMaui>true</UseMaui>
		<SingleProject>true</SingleProject>
		<ImplicitUsings>enable</ImplicitUsings>

		<!-- Display name -->
		<ApplicationTitle>directory-deleter</ApplicationTitle>

		<!-- App Identifier -->
		<ApplicationId>com.companyname.directory_deleter</ApplicationId>
		<ApplicationIdGuid>c5a240f0-6866-4aa3-8d34-9c682b0cf217</ApplicationIdGuid>

		<!-- Versions -->
		<ApplicationDisplayVersion>0.1.1</ApplicationDisplayVersion>
		<ApplicationVersion>101</ApplicationVersion>

		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">11.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">13.1</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">29.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.22621.0</SupportedOSPlatformVersion>
		<TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.22621.0</TargetPlatformMinVersion>
		<GenerateAppInstallerFile>False</GenerateAppInstallerFile>
		<AppxPackageSigningEnabled>True</AppxPackageSigningEnabled>
		<PackageCertificateKeyFile>directory-deleter_TemporaryKey.pfx</PackageCertificateKeyFile>
		<AppxPackageSigningTimestampDigestAlgorithm>SHA512</AppxPackageSigningTimestampDigestAlgorithm>
		<AppxAutoIncrementPackageRevision>False</AppxAutoIncrementPackageRevision>
		<AppxSymbolPackageEnabled>False</AppxSymbolPackageEnabled>
		<GenerateTestArtifacts>True</GenerateTestArtifacts>
		<HoursBetweenUpdateChecks>0</HoursBetweenUpdateChecks>
		<GenerateRuntimeConfigurationFiles>true</GenerateRuntimeConfigurationFiles>
		<DefaultLanguage>en-us</DefaultLanguage>
		<PackageReadmeFile>README.md</PackageReadmeFile>
	</PropertyGroup>

	<PropertyGroup Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows' and '$(RuntimeIdentifierOverride)' != ''">
		<RuntimeIdentifier>$(RuntimeIdentifierOverride)</RuntimeIdentifier>
	</PropertyGroup>

	<PropertyGroup Condition="$(TargetFramework.Contains('-android')) and '$(Configuration)' == 'Release'">
		<AndroidKeyStore>True</AndroidKeyStore>
		<AndroidSigningKeyStore>../directorydeleter.keystore</AndroidSigningKeyStore>
		<AndroidSigningKeyAlias>directorydeleter</AndroidSigningKeyAlias>
		<AndroidSigningKeyPass></AndroidSigningKeyPass>
		<AndroidSigningStorePass></AndroidSigningStorePass>
	</PropertyGroup>

	<PropertyGroup Condition="'$(TargetFramework)'=='net7.0-ios'">
	  <ProvisioningType>manual</ProvisioningType>
	</PropertyGroup>

	<ItemGroup>
		<!-- App Icon -->
		<MauiIcon Include="Resources\AppIcon\appicon.svg" ForegroundFile="Resources\AppIcon\appiconfg.svg" Color="#512BD4">
		  <CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</MauiIcon>

		<!-- Splash Screen -->
		<MauiSplashScreen Include="Resources\Splash\splash.svg" Color="#512BD4" BaseSize="128,128">
		  <CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</MauiSplashScreen>

		<!-- Images -->
		<MauiImage Include="Resources\Images\*" />
		<MauiImage Update="Resources\Images\dotnet_bot.svg" BaseSize="168,208" />
		<MauiImage Update="Resources\Images\notification_off.png">
		  <CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</MauiImage>
		<MauiImage Update="Resources\Images\notification_on.png">
		  <CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</MauiImage>

		<!-- Custom Fonts -->
		<MauiFont Include="Resources\Fonts\*" />

		<!-- Raw Assets (also remove the "Resources\Raw" prefix) -->
		<MauiAsset Include="Resources\Raw\**" LogicalName="%(RecursiveDir)%(Filename)%(Extension)" />
	</ItemGroup>

	<ItemGroup>
	  <None Include="..\README.md">
	    <Pack>True</Pack>
	    <PackagePath>\</PackagePath>
	  </None>
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="CommunityToolkit.Maui" Version="5.2.0" />
		<PackageReference Include="CommunityToolkit.Mvvm" Version="8.2.1" />
		<PackageReference Include="Microsoft.Extensions.Configuration.Binder" Version="7.0.4" />
		<PackageReference Include="Microsoft.Extensions.Configuration.EnvironmentVariables" Version="7.0.0" />
		<PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
		<PackageReference Include="Serilog.Extensions.Logging" Version="7.0.0" />
		<PackageReference Include="Serilog.Sinks.File" Version="5.0.0" />
	</ItemGroup>

	<ItemGroup Condition="$(TargetFramework.Contains('-windows'))">
		<PackageReference Include="Microsoft.Toolkit.Uwp.Notifications" Version="7.1.3" />
	</ItemGroup>

	<ItemGroup>
	  <MauiAsset Update="Resources\Raw\AboutAssets.txt">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </MauiAsset>
	</ItemGroup>

	<ItemGroup>
	  <MauiFont Update="Resources\Fonts\OpenSans-Regular.ttf">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </MauiFont>
	  <MauiFont Update="Resources\Fonts\OpenSans-Semibold.ttf">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </MauiFont>
	</ItemGroup>


	<ItemGroup>
	  <MauiXaml Update="Views\MainPage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	</ItemGroup>

</Project>
