name: Windows build
on: 
  push:
    branches: [ main ]
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes' 
  # pull_request:
  #   branches: [ main ]
  workflow_dispatch:
permissions:
  contents: read
env:
  DOTNET_NOLOGO: true                     # Disable the .NET logo
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true # Disable the .NET first time experience
  DOTNET_CLI_TELEMETRY_OPTOUT: true       # Disable sending .NET CLI telemetry
    
jobs:
  build-windows:
    runs-on: windows-latest
    name: Windows Build
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.3
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3.2.0
        with:
          dotnet-version: 7.0.x

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.3.1
        with:
          vs-version: latest

      #- name: Install GitVersion
      #  uses: gittools/actions/gitversion/setup@v0
      #  with:
      #    versionSpec: '5.x'
      #    preferLatestVersion: true

      #- name: Determine Version
      #  id:   gitversion
      #  uses: gittools/actions/gitversion/execute@v0
      #  with:
      #    useConfigFile: true
      #    updateAssemblyInfo: true
      #    additionalArguments: '/showConfig'

      #- name: Display Version
      #  run: |
      #    echo "Major: ${{ steps.gitversion.outputs.major }}"
      #    echo "Minor: ${{ steps.gitversion.outputs.minor }}"
      #    echo "Patch: ${{ steps.gitversion.outputs.patch }}"
      #    echo "MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}"
      #    echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
      #    echo "LegacySemVer: ${{ steps.gitversion.outputs.legacySemVer }}"
      #    echo "AssemblySemVer: ${{ steps.gitversion.outputs.assemblySemVer }}"
      #    echo "AssemblySemFileVer: ${{ steps.gitversion.outputs.assemblySemFileVer }}"
      #    echo "FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}"
      #    echo "VersionSourceSha: ${{ steps.gitversion.outputs.versionSourceSha }}"
      #    echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.commitsSinceVersionSource }}"

      # - name: Install MAUI Workloads
      #   run: |
      #     dotnet workload install maui --ignore-failed-sources
        
      - name: Restore Dependencies
        run: dotnet restore directory-deleter/directory-deleter.csproj

      - name: Publish MAUI Windows
        run: dotnet publish -p:Configuration=Release -p:RestorePackages=false -p:TargetFramework=net7.0-windows10.0.22621.0 /p:GenerateAppxPackageOnBuild=true

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: windows-ci-build
          path: | 
            directory-deleter/bin/Release/net7.0-windows10.0.22621.0/win10-x64/AppPackages/directory-deleter*/*.msix
            directory-deleter/bin/Release/net7.0-windows10.0.22621.0/win10-x64/AppPackages/directory-deleter*/*.cer