name: Windows build
on: 
  push:
    branches: [ main ]
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes' 
  # pull_request:
  #   branches: [ main ]
  workflow_dispatch:
permissions:
  contents: read
env:
  DOTNET_NOLOGO: true                     # Disable the .NET logo
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true # Disable the .NET first time experience
  DOTNET_CLI_TELEMETRY_OPTOUT: true       # Disable sending .NET CLI telemetry
    
jobs:
  calculate-version:
    name: Calculate Version
    runs-on: windows-latest
    outputs:
      semVer: ${{ steps.gitversion.outputs.semVer }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.3
        with:
          fetch-depth: 0
          
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'
          preferLatestVersion: true

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0

  build-windows:
    runs-on: windows-latest
    name: Windows Build
    # needs: calculate-version
    # env:
    #   SEMVER: ${{ needs.calculate-version.outputs.semVer }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.3
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3.2.0
        with:
          dotnet-version: 7.0.x

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.3.1
        with:
          vs-version: latest

      # - name: Display Version
      #   run: |
      #     echo SemVer: $SEMVER

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'
          preferLatestVersion: true
  
      - name: Determine Version
        id:   gitversion
        uses: gittools/actions/gitversion/execute@v0
  
      - name: Display Version
        run: |
          echo "Major: ${{ steps.gitversion.outputs.major }}"
          echo "Minor: ${{ steps.gitversion.outputs.minor }}"
          echo "Patch: ${{ steps.gitversion.outputs.patch }}"

      - name: Create MAUI version
        uses: managedcode/MAUIAppVersion@v1
        with:
          csproj: 'directory-deleter/directory-deleter.csproj'
          version: '0' # to keep value unique
          displayVersion: $SEMVER
          printFile: true # optional
               
      - name: Restore Dependencies
        run: dotnet restore directory-deleter/directory-deleter.csproj
 
      - name: Publish MAUI Windows
        run: dotnet publish -p:Configuration=Release -p:RestorePackages=false -p:TargetFramework=net7.0-windows10.0.22621.0 /p:GenerateAppxPackageOnBuild=true

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: windows-ci-build
          path: | 
            directory-deleter/bin/Release/net7.0-windows10.0.22621.0/win10-x64/AppPackages/directory-deleter*/*.msix
            directory-deleter/bin/Release/net7.0-windows10.0.22621.0/win10-x64/AppPackages/directory-deleter*/*.cer